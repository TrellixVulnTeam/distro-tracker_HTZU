.. _email-messages:

Email Messages
==============

When a user is subscribed to a package or to a team, it will receive
different types of emails related to the package (or to the team's packages).

.. _keywords:

Type of Emails
--------------

Each email sent through the package tracker is classified under one of the
**keywords** listed below. This classification enables the users to select the
mails that they want to receive.

The following keywords are enabled by default but users can opt-out
from each of them if they are not interested:

**bts**
    All the bug reports and following discussions.

**bts-control**
    Metadata and status changes on the bug reports. In the case of the Debian bug
    tracker, notifications from the control bot at control@bugs.debian.org.

**upload-source**
    Notification of a source package upload that got accepted in the
    archive.

**archive**
    Other notifications related to the package archive. In the case of
    Debian, includes all other emails generated by
    :abbr:`DAK (Debian Archive Kit)` like override disparity or package
    removal notifications.

**build**
    Build failure notifications.

**contact**
    Mails sent to the package maintainer. In the case of Debian, a copy of
    the mails sent to the :samp:`{package}@packages.debian.org` email aliases.

**summary**
    Regular summary emails about the package's status. In the case of
    Debian, this includes notification related to its testing migration.
    Ideally it should also include notifications of new upstream versions,
    and a notification if the package is orphaned (but this is not yet the
    case).

**default**
    Any other notification received by the package tracker that could not
    be better classified.

The followed keyword are disabled by default but users can opt-in to
each of them if they wish to receive the corresponding messages:

**upload-binary**
    Notification of a binary package upload that got accepted in the
    archive. In the case of Debian, it means a dozen of emails for each
    source package upload, every time that the package has been built
    for another architecture.

**vcs**
    VCS commit notifications, if the package has a VCS repository and the
    maintainer has set up forwarding of commit notifications to the
    package tracker.

**translation**
    Notifications related to translations. In the case of Debian, it
    includes translations of descriptions or debconf templates submitted
    to the Debian Description Translation Project.

**derivatives**
    Information about changes made to the package in derivative
    distributions. In the case of Debian, this notably includes
    information about Ubuntu source package uploads.

**derivatives-bugs**
    Bugs reports and comments from derivative distributions. In the case
    of Debian, this includes bug reports traffic from Ubuntu's Launchpad.

.. _mail-headers:

Mail Headers
------------

Once subscribed to a package, the user receives mails forwarded by the package
tracker. Those mails have special headers appended to make it easy
to filter them in a special mailbox (e.g. with procmail). The added headers are
``X-Loop``, ``X-Distro-Tracker-Package``, ``X-Distro-Tracker-Keyword``,
``List-Id`` and ``List-Unsubscribe``. In the case of Debian, 
``X-Debian-Package`` and ``X-Debian`` are also added.

Here is an example of added headers for a source upload notification on the
dpkg package (for the distro-tracker instance running on tracker.debian.org)::

    X-Loop: dispatch@tracker.debian.org
    X-Distro-Tracker-Package: dpkg
    X-Distro-Tracker-Keyword: upload-source
    X-Debian-Package: dpkg
    X-Debian: tracker.debian.org
    List-Id: <dpkg.tracker.debian.org>
    List-Unsubscribe: <mailto:control@tracker.debian.org?body=unsubscribe%20dpkg>

.. _package-subscription:

Subscribing to a package
------------------------

On the website
~~~~~~~~~~~~~~

On each package page
(:samp:`https://{distro-tracker-domain}/pkg/{package-name}`) you will find
a :guilabel:`Subscribe` button. If you are authenticated, it will
immediately subscribe you and show you an :guilabel:`Unsubscribe` button
that you can use to revert the operation. If you are not authenticated,
it will invite you to login first to be able to complete the operation.

If you have have multiple emails associated to your account, the
subscription process will ask you to select the email address that
will receive the notifications.

With the mailbot
~~~~~~~~~~~~~~~~

To subscribe to a package through email, you will have to send an email
to :samp:`control@{distro-tracker-domain}` containing the command
:samp:`subscribe {package-name}` either in the subject or in the body of
the mail. This will subscribe the email address that you used to send
the message. You can ask for the subscription of another email address
by using the command :samp:`subscribe {package-name} {email}`.

The mailbot will send back a confimation mail to the email address being
subscribed. The message will contain a confirmation command that the user
must send back to the mailbot. A simple reply is usually enough for
this as the mailbot is smart enough to detect the command even when it's
quoted in the reply.
